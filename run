#!/bin/bash
set -e

# --- pick a Python ---
if command -v py >/dev/null 2>&1; then
  PY=py
elif command -v python3 >/dev/null 2>&1; then
  PY=python3
elif command -v python >/dev/null 2>&1; then
  PY=python
else
  echo "Error: Python not found (looked for py, python3, then python)." >&2
  exit 1
fi

# --- pick a pip compatible with that Python ---
if "$PY" -m pip --version >/dev/null 2>&1; then
  # Use pip module from the chosen Python (best practice)
  PIP_CMD=("$PY" -m pip)
elif command -v pip >/dev/null 2>&1; then
  PIP_CMD=(pip)
elif command -v pip3 >/dev/null 2>&1; then
  PIP_CMD=(pip3)
else
  echo "Error: pip not found for $PY (tried '$PY -m pip', then pip, then pip3)." >&2
  exit 1
fi

cmd="${1:-}"
case "$cmd" in
  install)
    echo "Starting installation..." >&2
    "${PIP_CMD[@]}" install -e '.[dev]' || {
      echo "Installation failed with exit code $?" >&2
      exit 1
    }
    echo "Install complete."
    ;;
  test)
    # Run coverage with pytest first
    if ! "$PY" -m coverage run -m pytest -q; then
      echo "Tests failed" >&2
      exit 1
    fi

    # Generate coverage report
    "$PY" -m coverage json -o coverage.json || {
      echo "Coverage report generation failed" >&2
      exit 1
    }

    # Extract test count and coverage percentage
    pct=$("$PY" -c "
import json
try:
    with open('coverage.json', 'r') as f:
        data = json.load(f)
        pct_val = data.get('totals', {}).get('percent_covered', 0.0)
        print(f'{pct_val:.0f}%')
except:
    print('0%')
" 2>/dev/null || echo "0%")

    # Get test results
    test_output=$("$PY" -m pytest -q --tb=no 2>&1 || true)
    passed=$(echo "$test_output" | grep -o '[0-9]\+ passed' | head -1 | grep -o '[0-9]\+' 2>/dev/null || echo "0")
    total="$passed"

    echo "$passed/$total test cases passed. $pct line coverage achieved."
    ;;
  *)
    "$PY" -m acmecli.main "$@"
    ;;
esac
